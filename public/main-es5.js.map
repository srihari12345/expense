{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/authentication/authentication.module.ts","webpack:///src/app/authentication/forgot-password/forgot-password.component.ts","webpack:///src/app/authentication/forgot-password/forgot-password.component.html","webpack:///src/app/authentication/login/login.component.ts","webpack:///src/app/authentication/login/login.component.html","webpack:///src/app/authentication/reset-password/reset-password/reset-password.component.ts","webpack:///src/app/authentication/reset-password/reset-password/reset-password.component.html","webpack:///src/app/helpers/guards/auth.guard.ts","webpack:///src/app/helpers/services/authentication/authenticate.service.ts","webpack:///src/app/helpers/services/core/communication.service.ts","webpack:///src/app/helpers/services/groups/groups.service.ts","webpack:///src/app/helpers/services/notifications/notifications.service.ts","webpack:///src/app/helpers/services/socket/socket.service.ts","webpack:///src/app/helpers/services/utils/utils.service.ts","webpack:///src/app/modules/expenses/add-expense/add-expense.component.ts","webpack:///src/app/modules/expenses/add-expense/add-expense.component.html","webpack:///src/app/modules/expenses/update-expense/update-expense.component.ts","webpack:///src/app/modules/expenses/update-expense/update-expense.component.html","webpack:///src/app/modules/groups.module.ts","webpack:///src/app/modules/groups/create-group/create-group.component.ts","webpack:///src/app/modules/groups/create-group/create-group.component.html","webpack:///src/app/modules/groups/group-details/group-details.component.ts","webpack:///src/app/modules/groups/group-details/group-details.component.html","webpack:///src/app/modules/groups/groups/groups.component.ts","webpack:///src/app/modules/groups/groups/groups.component.html","webpack:///src/app/modules/groups/update-group/update-group.component.ts","webpack:///src/app/modules/groups/update-group/update-group.component.html","webpack:///src/app/modules/my profile/my-profile/my-profile.component.ts","webpack:///src/app/modules/my profile/my-profile/my-profile.component.html","webpack:///src/app/modules/notifications/notifications/notifications/notifications.component.ts","webpack:///src/app/modules/notifications/notifications/notifications/notifications.component.html","webpack:///src/app/modules/shared/shared.module.ts","webpack:///src/app/modules/shared/top-navigation/top-navigation/top-navigation.component.ts","webpack:///src/app/modules/shared/top-navigation/top-navigation/top-navigation.component.html","webpack:///src/app/page-not-found/page-not-found/page-not-found.component.ts","webpack:///src/app/page-not-found/page-not-found/page-not-found.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///ws (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AuthenticationModule","ForgotPasswordComponent","fb","_auth","router","toastr","forgotForm","group","email","required","forgotPassword","value","subscribe","response","console","log","status","reset","navigateByUrl","alert","LoginComponent","_utils","toggle","hide","countryCodes","signInForm","password","signUpForm","firstName","lastName","phoneNumber","getCountryCodes","showMenu","signup","setTimeout","signin","setUserInfoInLocalStorage","data","userDetails","setAuthToken","authToken","navigate","error_message","warning","error","menu","signUp","signIn","ResetPasswordComponent","_route","validationToken","snapshot","paramMap","get","confirmPassword","updatePassword","apiResponse","success","goToSignIn","message","updatePasswordFunction","AuthGuard","route","state","token","getUserAuth","info","getUserInfoFromLocalStorage","providedIn","AuthenticateService","_http","localStorage","setItem","JSON","stringify","parse","getItem","setAllUsersInfoInLocalStorage","getAllUsersInfoFromLocalStorage","post","API_VERSION","APIS","SIGNUP","map","SIGNIN","params","set","FORGOTPASSWORD","put","RESETPASSWORD","userId","CommunicationService","emitChangeSource","changeEmitted","asObservable","myMessage","next","GroupsService","BASE_URL","SUB_PATH","GROUP","DELETE","DETAILS","UPDATEGROUP","EXPENSE","LIST","UPDATEEXPENSE","NotificationsService","NOTIFICATIONS","UPDATE","SocketService","http","verifyUser","create","observer","socket","on","onlineUserList","userList","disconnect","listenAuthError","getUpdatesFromUser","receiveSocketNotification","setUser","emit","notifyUpdates","notifyUpdatesItem","exitSocket","disconnectedSocket","sendSocketNotification","sendSocketNotifs","socketname","forceNew","UtilsService","Http","AddExpenseComponent","_groups","_router","_authenticate","_socket","allUsers","category","dropdownList","selectedItems","dropdownSettings","singleSelection","idField","textField","selectAllText","unSelectAllText","itemsShowLimit","allowSearchFilter","dropdownSettings1","getGroupDetails","gid","groupDetails","groupDetail","group_users","resetForm","addExpenseForm","groupId","expenseName","amount","expensePaidBy","expenseUsersInvolved","getCategory","item","push","items","createExpense","onItemSelect","onSelectAll","UpdateExpenseComponent","getExpenseDetails","expenseDetails","expenseDetail","updateExpenseForm","expenseId","updateExpense","GroupsModule","CreateGroupComponent","getMyGroups","getAllGroups","length","allGroups","getUsersGroup","getUsers","forEach","element","item_id","item_text","createGroup","createGroupForm","patchValue","group_creatorName","group_creatorId","group_updater_id","group_updater_name","addGroup","group_name","description","GroupDetailsComponent","settleExpenseTableData","getAllUsers","generateSettleExpenseData","usersVal","len","index","toPayToCreator","deleteExpense","res","redirectToCreateExpense","redirectToUpdateExpense","verifyUserConfirmation","err","notifyUpdatesToUser","GroupsComponent","deleteGroup","UpdateGroupComponent","MyProfileComponent","NotificationsComponent","SharedModule","TopNavigationComponent","_comm","notificationCount","isLoggedIn","logoutFunction","logout","removeItem","emitChange","resp","isUserDataStored","fetchToken","activeDashBoard","active","changes","PageNotFoundComponent","location","goBack","back","environment","production","LOGOUT","CREATEGROUP","CREATEEXPENSE","EXPENSE_DETAILS","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './authentication/login/login.component';\nimport { ForgotPasswordComponent } from './authentication/forgot-password/forgot-password.component';\nimport { ResetPasswordComponent } from './authentication/reset-password/reset-password/reset-password.component';\nimport { GroupsComponent } from './modules/groups/groups/groups.component';\nimport { MyProfileComponent } from './modules/my profile/my-profile/my-profile.component';\nimport { NotificationsComponent } from './modules/notifications/notifications/notifications/notifications.component';\nimport { AuthGuard } from './helpers/guards/auth.guard';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found/page-not-found.component';\nimport { CreateGroupComponent } from './modules/groups/create-group/create-group.component'\nimport { UpdateGroupComponent } from './modules/groups/update-group/update-group.component';\nimport { GroupDetailsComponent } from './modules/groups/group-details/group-details.component'\nimport { AddExpenseComponent } from './modules/expenses/add-expense/add-expense.component';\nimport { UpdateExpenseComponent } from './modules/expenses/update-expense/update-expense.component';\n\n\n\nconst routes: Routes = [\n  { \n    path: '',\n    redirectTo: 'authenticate', \n    pathMatch: 'full'\n  },\n  {\n    path: 'authenticate',\n    component: LoginComponent\n  },\n\n  { \n    path:'forgot-password',\n    component:ForgotPasswordComponent\n  },\n{\n  path:'resetpassword/:validationToken',\n  component:ResetPasswordComponent\n},\n{\n  path:'groups',\n  component:GroupsComponent,\n  canActivate:[AuthGuard]\n},\n{\n  path:'groups/create-group',\n  component:CreateGroupComponent,\n  canActivate:[AuthGuard]\n},\n{\n  path:'groups/:id',\n  component:GroupDetailsComponent,\n  canActivate:[AuthGuard]\n},\n{\n  path:'groups/updateGroup',\n  component:UpdateGroupComponent,\n  canActivate:[AuthGuard]\n},\n{\n  path:'groups/expense/create-expense/:groupId',\n  component:AddExpenseComponent,\n  canActivate:[AuthGuard]\n},\n{\n  path:'groups/expense/update-expense/:expenseId',\n  component:UpdateExpenseComponent,\n  canActivate:[AuthGuard]\n},\n{\n  path:'my-profile',\n  component:MyProfileComponent,\n  canActivate:[AuthGuard]\n},\n{\n  path:'notifications',\n  component:NotificationsComponent,\n  canActivate:[AuthGuard]\n},\n{\n  path :'*',\n  component:PageNotFoundComponent\n},\n{\n  path :'**',\n  component:PageNotFoundComponent\n},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'split-expenses-client';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport{RouterModule} from '@angular/router';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SharedModule } from './modules/shared/shared.module';\n\nimport { AuthenticationModule } from './authentication/authentication.module';\nimport { AuthenticateService } from './helpers/services/authentication/authenticate.service';\nimport { TopNavigationComponent } from './modules/shared/top-navigation/top-navigation/top-navigation.component';\n\nimport { CommunicationService } from 'src/app/helpers/services/core/communication.service';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found/page-not-found.component';\nimport { GroupsService } from './helpers/services/groups/groups.service';\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\nimport { GroupsModule } from \"./modules/groups.module\";\nimport { HttpClient } from '@angular/common/http';\nimport { SocketService } from './helpers/services/socket/socket.service';\nimport { NotificationsService } from './helpers/services/notifications/notifications.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PageNotFoundComponent,\n    \n   \n    \n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    AuthenticationModule,\n    SharedModule,\n    RouterModule,\n    NgMultiSelectDropDownModule.forRoot(),\n    GroupsModule,\n    \n  ],\n  providers: [AppRoutingModule,AuthenticateService,NotificationsService,CommunicationService,GroupsService,SocketService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\nimport { SharedModule } from '../modules/shared/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { UtilsService } from '../helpers/services/utils/utils.service';\nimport {HttpClientModule, HttpClient, HttpHandler } from '@angular/common/http';\nimport {HttpModule} from \"@angular/http\";\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { RouterModule } from '@angular/router';\nimport { ResetPasswordComponent } from './reset-password/reset-password/reset-password.component';\n\n\n\n\n@NgModule({\n  declarations: [LoginComponent, ForgotPasswordComponent, ResetPasswordComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    FormsModule, \n    ReactiveFormsModule,\n    HttpModule,\n    HttpClientModule,\n    RouterModule\n    \n    \n  ],\n  providers: [HttpClient,UtilsService]\n})\nexport class AuthenticationModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators} from '@angular/forms';\nimport {ToastrService} from 'ngx-toastr';\n\nimport { MatIcon } from \"@angular/material/icon\";\nimport { AuthenticateService } from 'src/app/helpers/services/authentication/authenticate.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.scss']\n})\nexport class ForgotPasswordComponent implements OnInit {\n  forgotForm: FormGroup;\n\n  constructor(private fb: FormBuilder,\n    private _auth: AuthenticateService,\n    private router:Router,\n    private toastr:ToastrService) { }\n\n  ngOnInit(): void {\n\n    this.forgotForm = this.fb.group({\n      email: [null,[\n        Validators.required,\n        Validators.email\n      ]],\n    });\n  }\n\n\n  forgotPassword(){\n    this._auth.forgotPassword(this.forgotForm.value).subscribe((response : any) => {\n      console.log(response);\n      if(response.status == 200) {\n        this.forgotForm.reset();\n        this.router.navigateByUrl('/authenticate');\n        \n      }else{\n        alert(\"Error in the file \");\n        this.forgotForm.reset();\n      }\n    })\n  }\n}","<div class=\"container-fluid\">\n  <div class=\"row M0\">\n    <div class=\"col-12\">\n      <h1 class=\"signup1\">Forgot Password</h1>\n      <form class=\"signin\" [formGroup]=\"forgotForm\" (ngSubmit)=\"forgotPassword()\">\n        <mat-form-field class=\"full-width-field\">\n          <mat-label>Email</mat-label>\n          <span class=\"material-icons\" matSuffix>\n            person_outline\n          </span>\n          <input matInput formControlName=\"email\" placeholder=\"Ex. pat@example.com\" autocomplete=\"off\">\n          <mat-error\n            *ngIf=\"forgotForm.controls.email.hasError('email') && !forgotForm.controls.email.hasError('required')\">\n            Please enter a valid email address\n          </mat-error>\n          <mat-error *ngIf=\"forgotForm.controls.email.hasError('required')\">\n            Email is <strong>required</strong>\n          </mat-error>\n        </mat-form-field>\n        <div class=\"text-center\">\n          <button mat-raised-button color=\"primary\" class=\"btn MR15\" type=\"submit\"\n            [disabled]=\"!forgotForm.valid\">Send</button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport { FormGroup, FormBuilder, Validators} from '@angular/forms';\nimport {ToastrService} from 'ngx-toastr';\n\nimport { MatIcon } from \"@angular/material/icon\";\nimport { UtilsService } from 'src/app/helpers/services/utils/utils.service';\nimport { AuthenticateService } from 'src/app/helpers/services/authentication/authenticate.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  public toggle : boolean = true;\n  signInForm: FormGroup;\n  signUpForm: FormGroup;\n  hide: Boolean = true;\n  countryCodes: any = [];\n  constructor(private fb: FormBuilder,\n    private _utils: UtilsService,\n    private _auth: AuthenticateService,\n    private router:Router,\n    private toastr:ToastrService) { \n    \n  }\n\n  ngOnInit(): void {\n    this.signInForm = this.fb.group({\n      email: [null,[\n        Validators.required,\n        Validators.email\n      ]],\n      password: [null,Validators.required]\n    });\n    this.signUpForm = this.fb.group({\n      firstName: [null,Validators.required],\n      lastName: [null,Validators.required],\n      email: [null,[\n        Validators.required,\n        Validators.email\n      ]],\n      code: [null,Validators.required],\n      phoneNumber: [null,Validators.required],\n      password: [null,Validators.required],\n    })\n    this.getCountryCodes();\n    this.showMenu('signin');\n  }\n\n  getCountryCodes(){\nthis._utils.getCountryCodes().subscribe((response: any) => {\n  this.countryCodes = response;\n})\n  }\n\n  signUp(){\n    let req = {\n      firstName: this.signUpForm.value.firstName,\n      lastName: this.signUpForm.value.lastName,\n      email: this.signUpForm.value.email,\n      phoneNumber:'+'+ this.signUpForm.value.code+'-'+this.signUpForm.value.phoneNumber,\n      password: this.signUpForm.value.password,\n      \n    }\n\n    console.log(req);\n\n\n\n    this._auth.signup(req).subscribe((response : any) => {\n      console.log(response);\n      if(response.status == 200) {\n        setTimeout(() => {\n        //this.getSignIn();\n      }, 1000);\n        \n      }else{\n        alert(\"Error in the file \");\n        this.signUpForm.reset();\n      }\n    })\n  }\n\n  signIn() {\n    this._auth.signin(this.signInForm.value).subscribe((response: any) => {\n      console.log(response);\n      if (response.status == 200) {\n        this._auth.setUserInfoInLocalStorage(response.data.userDetails);\n        this._auth.setAuthToken(response.data.authToken);\n       \n        //this._comm.emitChange(true);\n        this.router.navigate([\"/groups\"]); //redirects\n      } else {\n        error_message => {\n          if (error_message.status == 404) {\n            this.toastr.warning(\"Login Failed\");\n          } else if (error_message.status == 400) {\n            this.toastr.warning(\"Login Failed\", \"Wrong Password\");\n          } else {\n            this.toastr.error(\"Some Error Occurred\", \"Error!\");\n          }\n        }; \n      }\n    });\n  }\n\n  showMenu(menu:string){\n\n    if(menu == 'signin'){\n      this.toggle = true;\n    }else if(menu == 'signup'){\n      this.toggle = false;\n    }\n\n    if(this.toggle){\n      this.signInForm.reset();\n    }else{\n      this.signUpForm.reset();\n    }\n  }\n\n}","<div class=\"container-fluid\">\n  <div class=\"content\">\n    <div class=\"container\">\n      <div class=\"c1\">\n        <div class=\"c11\">\n          <h1 class=\"mainhead\">PICK YOUR SPOT</h1>\n          <p class=\"mainp\">Just click the buttons below to toggle between SignIn & SignUp</p>\n        </div>\n        <div id=\"left\" (click)=\"showMenu('signin')\" [ngClass]=\"{'left_hover': toggle}\">\n          <h1 class=\"s1class\" [ngStyle]=\"{'color': toggle ? '#EE9BA3' : '#748194'}\"><span>SIGN</span><span\n              class=\"su\">IN</span>\n          </h1>\n        </div>\n        <div id=\"right\" (click)=\"showMenu('signup')\" [ngClass]=\"{'right_hover': !toggle}\">\n          <h1 class=\"s2class\" [ngStyle]=\"{'color': !toggle ? '#EE9BA3' : '#748194'}\"><span>SIGN</span><span\n              class=\"su\">UP</span></h1>\n        </div>\n      </div>\n\n      <div class=\"c2\">\n        <div class=\"container-fluid\" [ngStyle]=\"{'display': !toggle ? 'block' : 'none'}\">\n          <div class=\"row M0\">\n            <div class=\"col-12\">\n              <h1 class=\"signup1\">SIGN UP</h1>\n              <form class=\"signup\" [formGroup]=\"signUpForm\" (ngSubmit)='signUp()'>\n                <mat-form-field class=\"half-width-field MR4\">\n                  <mat-label>First Name</mat-label>\n                  <span class=\"material-icons\" matSuffix>\n                    person_outline\n                  </span>\n                  <input matInput formControlName=\"firstName\" placeholder=\"John\" autocomplete=\"off\">\n                  <mat-error *ngIf=\"signUpForm.controls.firstName.hasError('required')\">\n                    First Name is <strong>required</strong>\n                  </mat-error>\n                </mat-form-field>\n\n                <mat-form-field class=\"half-width-field ML4\">\n                  <mat-label>Last Name</mat-label>\n                  <span class=\"material-icons\" matSuffix>\n                    person_outline\n                  </span>\n                  <input matInput formControlName=\"lastName\" placeholder=\"Doe\" autocomplete=\"off\">\n                  <mat-error *ngIf=\"signUpForm.controls.lastName.hasError('required')\">\n                    Last Name is <strong>required</strong>\n                  </mat-error>\n                </mat-form-field>\n\n                <mat-form-field class=\"full-width-field\">\n                  <mat-label>Email</mat-label>\n                  <span class=\"material-icons\" matSuffix>\n                    person_outline\n                  </span>\n                  <input matInput formControlName=\"email\" placeholder=\"Ex. pat@example.com\" autocomplete=\"off\">\n                  <mat-error\n                    *ngIf=\"signUpForm.controls.email.hasError('email') && !signUpForm.controls.email.hasError('required')\">\n                    Please enter a valid email address\n                  </mat-error>\n                  <mat-error *ngIf=\"signUpForm.controls.email.hasError('required')\">\n                    Email is <strong>required</strong>\n                  </mat-error>\n                </mat-form-field>\n\n                <mat-form-field class=\"_30width\">\n                  <mat-label>Code</mat-label>\n                  <mat-select formControlName=\"code\" required>\n                    <mat-option>--</mat-option>\n                    <mat-option *ngFor=\"let code of countryCodes\" [value]=\"code.code\">\n                      {{code.slug}}\n                    </mat-option>\n                  </mat-select>\n                  <mat-error *ngIf=\"signUpForm.controls.code.hasError('required')\">Please choose a country code\n                  </mat-error>\n                </mat-form-field>\n                <mat-form-field class=\"_70width\">\n                  <mat-label>Phone Number</mat-label>\n                  <input matInput formControlName=\"phoneNumber\" placeholder=\"Ex. +91-9876543210\" autocomplete=\"off\">\n                  <mat-error *ngIf=\"signUpForm.controls.phoneNumber.hasError('required')\">\n                    Phone Number is <strong>required</strong>\n                  </mat-error>\n                </mat-form-field>\n\n                <mat-form-field class=\"full-width-field M0\">\n                  <mat-label>Password</mat-label>\n                  <input matInput formControlName=\"password\" [type]=\"hide ? 'password' : 'text'\"\n                    placeholder=\"Ex. Abcd@123\" autocomplete=\"off\">\n                  <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\n                    [attr.aria-pressed]=\"hide\">\n                    <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                  </button>\n                  <mat-error *ngIf=\"signUpForm.controls.password.hasError('required')\">\n                    Password is <strong>required</strong>\n                  </mat-error>\n                </mat-form-field>\n                <button [disabled]=\"!signUpForm.valid\" mat-raised-button color=\"primary\" class=\"full-width-field\"\n                  type=\"submit\">Sign Up</button>\n              </form>\n            </div>\n          </div>\n        </div>\n        <div class=\"container-fluid\" [ngStyle]=\"{'display': toggle ? 'block' : 'none'}\">\n          <div class=\"row M0\">\n            <div class=\"col-12\">\n              <h1 class=\"signup1\">SIGN IN</h1>\n              <form class=\"signin\" [formGroup]=\"signInForm\" (ngSubmit)=\"signIn()\">\n                <mat-form-field class=\"full-width-field\">\n                  <mat-label>Email</mat-label>\n                  <span class=\"material-icons\" matSuffix>\n                    person_outline\n                  </span>\n                  <input matInput formControlName=\"email\" placeholder=\"Ex. pat@example.com\" autocomplete=\"off\">\n                  <mat-error\n                    *ngIf=\"signInForm.controls.email.hasError('email') && !signInForm.controls.email.hasError('required')\">\n                    Please enter a valid email address\n                  </mat-error>\n                  <mat-error *ngIf=\"signInForm.controls.email.hasError('required')\">\n                    Email is <strong>required</strong>\n                  </mat-error>\n                </mat-form-field>\n                <mat-form-field class=\"full-width-field M0\">\n                  <mat-label>Password</mat-label>\n                  <input matInput formControlName=\"password\" [type]=\"hide ? 'password' : 'text'\"\n                    placeholder=\"Ex. Abcd@123\" autocomplete=\"off\">\n                  <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\"\n                    [attr.aria-pressed]=\"hide\">\n                    <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                  </button>\n                  <mat-error *ngIf=\"signInForm.controls.email.hasError('required')\">\n                    Password is <strong>required</strong>\n                  </mat-error>\n                </mat-form-field>\n                <div>\n                  <a [routerLink]=\"['/forgot-password']\" class=\"forgot-password MB15\">Forgot Password?</a>\n                </div>\n                <button [disabled]=\"!signInForm.valid\" mat-raised-button color=\"primary\" class=\"full-width-field\"\n                  type=\"submit\">Sign In</button>\n\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\n//import for toastr\nimport { ToastrService } from 'ngx-toastr';\n//for Service\nimport { AuthenticateService } from 'src/app/helpers/services/authentication/authenticate.service';\n//for routing\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.scss']\n})\nexport class ResetPasswordComponent implements OnInit {\n  public validationToken: any;\n  public password: any;\n  public confirmPassword: any;\n\n  constructor(\n    public _auth: AuthenticateService, \n    public _route: ActivatedRoute,\n    public router: Router,\n    private toastr: ToastrService\n\n  ) { }\n\n  ngOnInit() {\n    this.validationToken = this._route.snapshot.paramMap.get('validationToken');\n\n  }\n\n  public goToSignIn(): any {\n    this.router.navigate(['/signin']);\n  }//end of goToSign function\n\n  public updatePasswordFunction(): any {\n    if (this.password != this.confirmPassword) {\n      this.toastr.warning(\"Password doesn't match\", \"Warning!\");\n    }\n    else {\n      let data = {\n        validationToken: this.validationToken,\n        password: this.password,\n      }\n\n      this._auth.updatePassword(data).subscribe((apiResponse) => {\n\n        if (apiResponse.status == 200) {\n          this.toastr.success(\"Please login\", \"Password Updated!\");\n          setTimeout(() => {\n            this.goToSignIn();\n          }, 1000);//redirecting to signIn page\n\n        }\n        else {\n          this.toastr.error(apiResponse.message, \"Error!\");\n        }\n      },\n        (error) => {\n          if (error.status == 404) {\n            this.toastr.warning(\"Password Update failed\", \"Please request another password reset!\");\n          }\n          else {\n            this.toastr.error(\"Some Error Occurred\", \"Error!\");\n          }\n\n        });//end calling updatePassword\n\n    }\n\n  }//end updatePasswordFunction\n\n}","<div class=\"container-fluid bg-image\">\n  <div class=\"row\">\n\n    <div style=\"margin-top: 5vh;\" class=\"col-md-6 mx-auto col-sm-8\">\n      <div class=\"card border-info cardBorder\">\n        <div style=\"padding-top:30px\" class=\"card-body text-center \">\n          <div class=\"text-center\">\n            <div>\n              <h2>Reset Password!</h2>\n            </div>\n            <div>\n              <h5>Please choose new password</h5>\n            </div>\n          </div>\n\n          <br>\n          <form class=\"form-horizontal\" role=\"form\">\n            <div class=\"input-group mb-3 form-field-container\">\n\n              <mat-form-field appearance=\"standard\">\n                <mat-label>Password</mat-label>\n                <input matInput type=\"password\" placeholder=\"Enter your Password\" minlength=\"8\" #pwd=\"ngModel\"\n                  [(ngModel)]=\"password\" name=\"password\" required>\n                <mat-hint>* Min 8 Characters</mat-hint>\n\n                <mat-error *ngIf=\"pwd.errors?.required\">You must enter a value</mat-error>\n                <mat-error *ngIf=\"pwd.errors?.minlength\">You must enter atleast 8 Chars</mat-error>\n\n              </mat-form-field>\n\n            </div>\n            <br>\n            <div class=\"input-group mb-3 form-field-container\">\n\n              <mat-form-field appearance=\"standard\">\n                <mat-label>Re-enter Password</mat-label>\n                <input matInput type=\"password\" placeholder=\"Re-enter your Password\" minlength=\"8\" #conpwd=\"ngModel\"\n                  [(ngModel)]=\"confirmPassword\" name=\"confirmPassword\" required>\n                <mat-hint>* Min 8 Characters</mat-hint>\n\n                <mat-error *ngIf=\"conpwd.errors?.required\">You must enter a value</mat-error>\n                <mat-error *ngIf=\"conpwd.errors?.minlength\">You must enter atleast 8 Chars</mat-error>\n\n              </mat-form-field>\n\n            </div>\n            <div style=\"margin-top:10px\" class=\"form-group\">\n              <!-- Button -->\n\n              <div class=\"col-sm-12 controls\">\n                <button id=\"btn-save\" type=\"button\" class=\"btn btn-primary\" (click)=\"updatePasswordFunction()\">\n                  <i class=\"icon-hand-right\"></i> Save</button>\n              </div>\n            </div>\n\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Injectable } from \"@angular/core\";\nimport {\n  Router,\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot\n} from \"@angular/router\";\n\nimport { AuthenticateService } from \"../services/authentication/authenticate.service\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private router: Router, private _auth: AuthenticateService) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean {\n    let token = this._auth.getUserAuth();\n    let info = this._auth.getUserInfoFromLocalStorage();\n    if (token != null && info != null && token && info) {\n      return true;\n    }\n    this.router.navigate([\"/authenticate\"]);\n    return false;\n  }\n}","import { Injectable } from '@angular/core';\nimport {environment} from '../../../../environments/environment';\nimport { HttpClient,HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticateService {\n\n  constructor(private _http:HttpClient\n    ) { }\n\n  signup(req: {\n    firstName: any;\n    lastName: any;\n    email: any;\n    phoneNumber: any;\n    password: any;\n  }) {\n    return this._http.post(\n       environment.API_VERSION + environment.APIS.SIGNUP,\n      req\n    ).map(response => response);\n  }\n\n  signin(req: any) {\n    return this._http.post(\n       environment.API_VERSION + environment.APIS.SIGNIN,\n      req\n    ).map(response => response);\n  }\n\n  forgotPassword(req: { email: string }) {\n    const params = new HttpParams().set(\"email\", req.email);\n    return this._http.post(\n      \n        environment.API_VERSION +\n        environment.APIS.FORGOTPASSWORD,\n      req\n    ).map(response => response);\n  } \n\n  public updatePassword(req): Observable<any>{\n\n    const params = new HttpParams()\n      .set('validationToken', req.validationToken)\n      .set('password', req.password)\n\n      return this._http.put(\n        \n          environment.API_VERSION +\n          environment.APIS.RESETPASSWORD,\n        params\n      ).map(response => response);\n  }//end updatePassword\n\n\n  logout(userId, authToken): Observable<any> {\n    return this._http.post(\n      `${\n        environment.API_VERSION}${userId}/logout?authToken=${authToken}`,\n      {}\n    ).map(response => response);\n  }\n\n  public setUserInfoInLocalStorage = (req: any) => {\n    localStorage.setItem(\"userInfo\", JSON.stringify(req));\n  };\n\n  public setAuthToken = req => {\n    localStorage.setItem(\"auth\", req);\n  };\n\n  public getUserInfoFromLocalStorage: any = () => {\n    return JSON.parse(localStorage.getItem(\"userInfo\"));\n  };\n\n  public getUserAuth = () => {\n    return localStorage.getItem(\"auth\");\n  };\n\n  public setAllUsersInfoInLocalStorage =(req:any)=>{\n    localStorage.setItem(\"allUsersInfo\",JSON.stringify(req));\n  };\n\n  public getAllUsersInfoFromLocalStorage: any = () => {\n    return JSON.parse(localStorage.getItem(\"allUsersInfo\"));\n  };\n\n\n  public getUsers(authToken): Observable<any> {\n    return this._http.get(\n      `${\n        environment.API_VERSION}view/all?authToken=${authToken}`\n    );\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\n@Injectable()\nexport class CommunicationService {\n\n    constructor() { }\n\n    private emitChangeSource = new Subject<any>();\n    changeEmitted = this.emitChangeSource.asObservable();\n\n    // Service message\n    emitChange(myMessage: any) {\n        this.emitChangeSource.next(myMessage);\n    }\n}","import { Injectable } from \"@angular/core\";\nimport { environment } from \"../../../../environments/environment\";\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\nimport { Observable } from \"rxjs/Observable\";\nimport { AuthenticateService } from \"../authentication/authenticate.service\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class GroupsService {\n  authToken: String = this._auth.getUserAuth();\n  userId: String = this._auth.getUserInfoFromLocalStorage();\n  firstName: String = this._auth.getUserInfoFromLocalStorage();\n\n  constructor(private _http: HttpClient, private _auth: AuthenticateService) {}\n\n  addGroup(req): Observable<any> {\n    return this._http\n      .post(\n        `${environment.BASE_URL +\n          environment.API_VERSION}group/createGroup?authToken=${\n          this.authToken\n        }`,\n        req\n      )\n      .map(response => response);\n  }\n\n  getAllGroups(userId, authToken): Observable<any> {\n    return this._http.get(\n      `${environment.BASE_URL +\n        environment.API_VERSION}group/${userId}/allGroup?authToken=${authToken}`\n    );\n  }\n\n  deleteGroup(req): Observable <any> {\n    return this._http\n    .post(environment.API_VERSION + environment.SUB_PATH.GROUP + req + \"/\" + environment.APIS.DELETE + \"?authToken=\"+this.authToken,\n    {})\n    .map(response => response);\n  }\n\n  groupDetails(req): Observable <any> {\n    return this._http\n    .get(environment.API_VERSION + environment.SUB_PATH.GROUP + req + \"/\" + environment.APIS.DETAILS + \"?authToken=\"+this.authToken,\n    {})\n    .map(response => response);\n  }\n\n  updateGroup(req): Observable <any> {\n    return this._http\n    .post(environment.API_VERSION + environment.SUB_PATH.GROUP + req + \"/\" + environment.APIS.UPDATEGROUP + \"?authToken=\"+this.authToken,\n    {})\n    .map(response => response);\n  }\n  createExpense(req): Observable<any> {\n    return this._http\n      .post(\n        `${\n          environment.API_VERSION}group/expense/createExpense?authToken=${\n          this.authToken\n        }`,\n        req\n      )\n      .map(response => response);\n    \n  }\n\n  deleteExpense(req): Observable <any> {\n    return this._http\n    .post(environment.API_VERSION + environment.SUB_PATH.EXPENSE + req + \"/\" + environment.APIS.DELETE + \"?authToken=\"+this.authToken,\n    {})\n    .map(response => response);\n  }\n\n  expenseDetails(req): Observable <any> {\n    return this._http\n    .get(environment.API_VERSION + environment.SUB_PATH.GROUP + req +'/'+ environment.SUB_PATH.EXPENSE + environment.APIS.LIST + \"?authToken=\"+this.authToken,\n    {})\n    .map(response => response);\n  }\n\n  updateExpense(req): Observable <any> {\n    return this._http\n    .get(environment.API_VERSION + environment.SUB_PATH.GROUP + req +'/'+ environment.SUB_PATH.EXPENSE + environment.APIS.UPDATEEXPENSE + \"?authToken=\"+this.authToken,\n    {})\n    .map(response => response);\n  }\n\n}\n","import { Injectable } from \"@angular/core\";\nimport { environment } from \"../../../../environments/environment\";\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\nimport { Observable } from \"rxjs/Observable\";\nimport { AuthenticateService } from \"../authentication/authenticate.service\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class NotificationsService {\n  authToken: String = this._auth.getUserAuth();\n  userId: String = this._auth.getUserInfoFromLocalStorage();\n  firstName: String = this._auth.getUserInfoFromLocalStorage();\n\n  constructor(private _http: HttpClient, private _auth: AuthenticateService) {}\n\n  fetchNotificationById(req): Observable <any> {\n    return this._http\n    .get(environment.BASE_URL + environment.API_VERSION + req +\"/\" + environment.APIS.NOTIFICATIONS + \"?authToken=\"+this.authToken,\n    {})\n    .map(response => response);\n  }\n\n  updateNotification(id): Observable <any> {\n    let req = {};\n    req['isSeen'] = true;\n    req['notifyId'] = id;\n    return this._http\n    .put(environment.BASE_URL + environment.API_VERSION + id +\"/\" + environment.APIS.NOTIFICATIONS +\"/\" + environment.APIS.UPDATE + \"?authToken=\"+this.authToken,\n    req)\n    .map(response => response);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {environment} from 'src/environments/environment';\n\nimport * as io from 'socket.io-client';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocketService {\n\n  public socket;\n  \n  constructor(private http: HttpClient) { \n    console.log(\"SocketService is called\");\n    this.socket = io(environment.BASE_URL,{forceNew: true});\n    console.log(this.socket)\n  }\n\n  public verifyUser = () => {\n    return Observable.create((observer) => {\n      this.socket.on('verifyUser', (data) => {\n        console.log(\"verifying socket user\", data);\n        observer.next(data);\n      });\n    });\n  }\n\n  public onlineUserList = () => {\n    return Observable.create((observer) => {\n      this.socket.on('online-user-list', (userList) => {\n        console.log(\"online users list from socket\", userList)\n        observer.next(userList);\n      });\n    });\n\n  }\n\n  public disconnect = () => {\n    return Observable.create((observer) => {\n      this.socket.on('disconnect', () => {\n        observer.next();\n      });\n    });\n\n  }\n\n  public listenAuthError = () => {\n    return Observable.create((observer) => {\n      this.socket.on('auth-error', (data) => {\n        observer.next(data);\n      }); \n    });\n  }\n    \n  public getUpdatesFromUser = (userId) => {\n    return Observable.create((observer) => {\n      this.socket.on(userId, (data) => {\n        observer.next(data);\n      });\n    });\n  }\n\n  public receiveSocketNotification = () => {\n    return Observable.create((observer) => {\n      this.socket.on('receive-notification', (data) => {\n        console.log(\"Socket receiver\", data);\n        observer.next(data);\n      }); \n    });\n  }\n\n\npublic setUser = (authToken) => {\n  this.socket.emit('set-user', authToken);\n}\n\npublic notifyUpdates = (data) => {\n  this.socket.emit('notify-updates', data);\n}\n\npublic notifyUpdatesItem = (data) => {\n  this.socket.emit('notify-updates-item', data);\n}\n\npublic exitSocket = () =>{\n  this.socket.disconnect();\n}\n\npublic disconnectedSocket = () => {\n    this.socket.emit(\"disconnect\", \"\");\n}\n\npublic sendSocketNotification = (data) => {\n  console.log(\"send notification\",data);\n  this.socket.emit('send-notification', data);\n}\n\npublic sendSocketNotifs = (socketname, data) => {\n  this.socket.emit(socketname,data);\n}\n\n} \n\n\n\n\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders, HttpParams } from \"@angular/common/http\";\nimport { environment } from \"src/environments/environment\";\nimport \"rxjs/add/operator/map\";\nimport { Observable } from \"rxjs/Observable\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class UtilsService {\n\n  constructor(private Http: HttpClient) {}\n\n  public getCountryCodes(): Observable<any> {\n    return this.Http.get(\"./assets/code.json\");\n}\npublic getCategory(): Observable<any> {\n  return this.Http.get(\"./assets/category.json\");\n}\n};","import { Component, OnInit } from \"@angular/core\";\nimport {\n  FormsModule,\n  FormBuilder,\n  FormGroup,\n  Validators,\n} from \"@angular/forms\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { AuthenticateService } from \"src/app/helpers/services/authentication/authenticate.service\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { GroupsService } from \"src/app/helpers/services/groups/groups.service\";\nimport { IDropdownSettings } from \"ng-multiselect-dropdown\";\nimport { UtilsService } from \"src/app/helpers/services/utils/utils.service\";\nimport { SocketService } from \"src/app/helpers/services/socket/socket.service\";\n\n@Component({\n  selector: \"app-add-expense\",\n  templateUrl: \"./add-expense.component.html\",\n  styleUrls: [\"./add-expense.component.scss\"],\n})\nexport class AddExpenseComponent implements OnInit {\n  authToken: string;\n  addExpenseForm: FormGroup;\n  userId: any;\n  allGroups: any;\n  userName: any;\n  allUsers: any = [];\n  category: any = [];\n\n  dropdownList = [];\n  selectedItems = [];\n  dropdownSettings = {\n    singleSelection: false,\n    idField: \"item_id\",\n    textField: \"item_text\",\n    selectAllText: \"Select All\",\n    unSelectAllText: \"UnSelect All\",\n    itemsShowLimit: 3,\n    allowSearchFilter: true,\n  };\n\n  dropdownSettings1 = {\n    singleSelection: true,\n    idField: \"item_id\",\n    textField: \"item_text\",\n    selectAllText: \"Select All\",\n    unSelectAllText: \"UnSelect All\",\n    itemsShowLimit: 3,\n    allowSearchFilter: true,\n  };\n  groupDetail: any;\n  groupId: string;\n\n  constructor(\n    private fb: FormBuilder,\n    private _groups: GroupsService,\n    private toastr: ToastrService,\n    private _router: Router,\n    private _authenticate: AuthenticateService,\n    private _utils: UtilsService,\n    private route: ActivatedRoute,\n    private _socket: SocketService\n  ) {}\n\n  ngOnInit(): void {\n    this.groupId = this.route.snapshot.paramMap.get(\"groupId\");\n    console.log(this.groupId);\n    this.getGroupDetails(this.groupId);\n    this.authToken = this._authenticate.getUserAuth();\n    this.userId = this._authenticate.getUserInfoFromLocalStorage();\n\n    this.addExpenseForm = this.fb.group({\n      expenseName: [null, Validators.required],\n      amount: [null, Validators.required],\n      expensePaidBy: [null, Validators.required],\n      category: [null, Validators.required],\n      expenseUsersInvolved: [null, Validators.required],\n    });\n    this.getCategory();\n  }\n\n  onItemSelect(item: any) {\n    console.log(item);\n    this.selectedItems.push(item);\n  }\n  onSelectAll(items: any) {\n    console.log(items);\n  }\n\n  getCategory() {\n    this._utils.getCategory().subscribe((response: any) => {\n      this.category = response;\n    });\n  }\n\n  getGroupDetails: any = (gid) => {\n    this._groups.groupDetails(gid).subscribe(\n      (response) => {\n        console.log(response);\n        if (response.error == true && response.status == 404) {\n          console.log(\"in if\");\n          this.toastr.warning(response.message, \"\");\n        } else if (response.status == 200 && response.data) {\n          console.log(\"in else if\");\n          this.groupDetail = response.data;\n          this.allUsers = this.groupDetail.group_users;\n          console.log(this.allUsers);\n        }\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  };\n\n  createExpense() {\n     let req = {\n       expenseName: this.addExpenseForm.value.expenseName,\n       amount: this.addExpenseForm.value.amount,\n       expensePaidBy: this.addExpenseForm.value.expensePaidBy,\n       expenseUsersInvolved: this.addExpenseForm.value.expenseUsersInvolved,\n       category: this.addExpenseForm.value.category,\n       groupId: this.groupId,\n     };\n     this._groups.createExpense(req).subscribe(\n       (response: any) => {\n         console.log(response);\n         if (response.status == 200 && response.data) {\n             this.addExpenseForm.reset();\n             this._socket.sendSocketNotification(req.expenseUsersInvolved);\n             this._router.navigate([\"/groups\",this.groupId]);\n         }\n         if (response.status == 500 && response.error == true) {\n           this.addExpenseForm.reset();\n         }\n       },\n       (error) => {\n         console.log(error);\n       }\n     );\n  }\n\n  resetForm = () => {\n    console.log(\"in resrt form\");\n    this.addExpenseForm.reset();\n    console.log(\"before call\");\n    this._router.navigateByUrl(\"/groups\");\n  };\n}\n","<app-top-navigation></app-top-navigation>\n<div class=\"c2\">\n  <div class=\"container-fluid\">\n    <div class=\"row M0\">\n      <div class=\"offset-3 col-6\">\n        <div class=\"MTB15\">\n          <form [formGroup]=\"addExpenseForm\" (ngSubmit)=\"createExpense()\">\n            <div class=\"form-group\">\n              <mat-form-field class=\"full-width-field MR4\">\n                <mat-label>Expense Name</mat-label>\n                <input matInput formControlName=\"expenseName\" type=\"text\" placeholder=\"Enter Group Name\"\n                  autocomplete=\"off\" />\n                <mat-error *ngIf=\"addExpenseForm.controls.expenseName.hasError('required')\">\n                  Expense Name is <strong>required</strong>\n                </mat-error>\n              </mat-form-field>\n\n            </div>\n            <div class=\"form-group\">\n              <mat-form-field class=\"full-width-field MR4\">\n                <mat-label class='description'>Amount</mat-label>\n                <input matInput formControlName=\"amount\" type=\"number\" placeholder=\"Ex: 5000 INR\" autocomplete=\"off\" />\n                <mat-error *ngIf=\"addExpenseForm.controls.amount.hasError('required')\">\n                  Amount <strong>required</strong>\n                </mat-error>\n              </mat-form-field>\n\n            </div>\n            <div class=\"form-group\" class=\"full-width-field MR4\">\n\n              <mat-label>Paid By:</mat-label>\n              <ng-multiselect-dropdown [placeholder]=\"'Select Users to Add'\" [data]=\"allUsers\"\n                [settings]=\"dropdownSettings1\" (onSelect)=\"onItemSelect($event)\" (onSelectAll)=\"onSelectAll($event)\"\n                formControlName=\"expensePaidBy\">\n              </ng-multiselect-dropdown>\n\n            </div>\n            <div class=\"form-group\" class=\"full-width-field MR4\">\n\n              <mat-label>Expense to be split between:</mat-label>\n              <ng-multiselect-dropdown [placeholder]=\"'Select Users to Add'\" [data]=\"allUsers\"\n                [settings]=\"dropdownSettings\" (onSelect)=\"onItemSelect($event)\" (onSelectAll)=\"onSelectAll($event)\"\n                formControlName=\"expenseUsersInvolved\">\n              </ng-multiselect-dropdown>\n\n            </div>\n\n            <div class=\"form-group\" class=\"full-width-field MR4\">\n\n              <mat-label>category</mat-label>\n              <ng-multiselect-dropdown [placeholder]=\"'Select a category to add'\" [data]=\"category\"\n                [settings]=\"dropdownSettings1\" (onSelect)=\"onItemSelect($event)\" (onSelectAll)=\"onSelectAll($event)\"\n                formControlName=\"category\">\n              </ng-multiselect-dropdown>\n\n            </div>\n\n            <div class=\"flex-even\">\n              <button type=\"button\" mat-raised-button color=\"default\" (click)=\"resetForm()\">Cancel</button>\n              <button mat-raised-button color=\"primary\" [disabled]=\"!addExpenseForm.valid\" type=\"submit\">Create</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport {\n  FormsModule,\n  FormBuilder,\n  FormGroup,\n  Validators,\n} from \"@angular/forms\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { AuthenticateService } from \"src/app/helpers/services/authentication/authenticate.service\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { GroupsService } from \"src/app/helpers/services/groups/groups.service\";\nimport { IDropdownSettings } from \"ng-multiselect-dropdown\";\nimport { UtilsService } from \"src/app/helpers/services/utils/utils.service\";\n\n@Component({\n  selector: \"app-update-expense\",\n  templateUrl: \"./update-expense.component.html\",\n  styleUrls: [\"./update-expense.component.scss\"],\n})\nexport class UpdateExpenseComponent implements OnInit {\n  authToken: string;\n  userId: any;\n  allGroups: any;\n  userName: any;\n  allUsers: any = [];\n  category: any = [];\n\n  dropdownList = [];\n  selectedItems = [];\n  dropdownSettings = {\n    singleSelection: false,\n    idField: \"item_id\",\n    textField: \"item_text\",\n    selectAllText: \"Select All\",\n    unSelectAllText: \"UnSelect All\",\n    itemsShowLimit: 3,\n    allowSearchFilter: true,\n  };\n\n  dropdownSettings1 = {\n    singleSelection: true,\n    idField: \"item_id\",\n    textField: \"item_text\",\n    selectAllText: \"Select All\",\n    unSelectAllText: \"UnSelect All\",\n    itemsShowLimit: 3,\n    allowSearchFilter: true,\n  };\n  groupDetail: any;\n  groupId: string;\n  expenseDetail: any;\n  gid: any;\n  expenseId: string;\n  updateExpenseForm: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private _groups: GroupsService,\n    private toastr: ToastrService,\n    private _router: Router,\n    private _authenticate: AuthenticateService,\n    private _utils: UtilsService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    this.expenseId = this.route.snapshot.paramMap.get(\"expenseId\");\n    console.log(this.expenseId);\n    this.groupId = this.route.snapshot.paramMap.get(\"groupId\");\n    console.log(this.groupId);\n    this.getGroupDetails(this.groupId);\n    this.authToken = this._authenticate.getUserAuth();\n    this.userId = this._authenticate.getUserInfoFromLocalStorage();\n\n    this.getExpenseDetails(this.expenseId)\n\n    this.updateExpenseForm = this.fb.group({\n      expenseName:[this.expenseDetail.expenseName, Validators.required],\n      amount: [this.expenseDetail.amount, Validators.required],\n      expensePaidBy: [this.expenseDetail.expensePaidBy, Validators.required],\n      category: [this.expenseDetail.category, Validators.required],\n      expenseUsersInvolved: [this.expenseDetail.expenseUsersInvolved, Validators.required],\n    });\n    this.getCategory();\n  }\n  onItemSelect(item: any) {\n    console.log(item);\n    this.selectedItems.push(item);\n  }\n  onSelectAll(items: any) {\n    console.log(items);\n  }\n\n\n  getCategory(){\n    this._utils.getCategory().subscribe((response: any) => {\n      this.category = response;\n    })\n  }\n\n  getGroupDetails: any = (gid) => {\n    this._groups.groupDetails(gid).subscribe(\n      (response) => {\n        console.log(response);\n        if (response.error == true && response.status == 404) {\n          console.log(\"in if\");\n          this.toastr.warning(response.message, \"\");\n        } else if (response.status == 200 && response.data) {\n          console.log(\"in else if\");\n          this.groupDetail = response.data;\n          this.allUsers = this.groupDetail.group_users;\n          console.log(this.allUsers);\n        }\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  };\n\n  updateExpense() {\n    let req = {\n      expenseName: this.updateExpenseForm.value.expenseName,\n      amount: this.updateExpenseForm.value.amount,\n      expensePaidBy:this.updateExpenseForm.value.expensePaidBy,\n      expenseUsersInvolved:this.updateExpenseForm.value.expenseUsersInvolved,\n      category: this.updateExpenseForm.value.category,\n      groupId: this.groupId\n      \n    }\n    this._groups.updateExpense(req).subscribe(\n      (response: any) => {\n        console.log(response);\n        if (response.status == 200 && response.data) {\n          setTimeout(() => {\n            this.updateExpenseForm.reset();\n            this._router.navigateByUrl(\"/groups\");\n          }, 1000);\n        }\n        if (response.status == 500 && response.error == true) {\n          this.updateExpenseForm.reset();\n        }\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  getExpenseDetails: any = () => {\n    this._groups.expenseDetails(this.gid).subscribe(\n      (response) => {\n        console.log(response);\n        if (response.error == true && response.status == 404) {\n          console.log(\"in if\");\n          this.toastr.warning(response.message, \"\");\n        } else if (response.status == 200 && response.data) {\n          console.log(\"in else if\");\n          this.expenseDetail = response.data;\n          console.log(response.data);\n        }\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  };\n\n  resetForm = () => {\n    console.log(\"in resrt form\");\n    this.updateExpenseForm.reset();\n    console.log(\"before call\");\n    this._router.navigateByUrl(\"/groups\");\n  };\n}\n","<app-top-navigation></app-top-navigation>\n<div class=\"c2\">\n  <div class=\"container-fluid\">\n    <div class=\"row M0\">\n      <div class=\"offset-3 col-6\">\n        <div class=\"MTB15\">\n          <form [formGroup]=\"updateExpenseForm\" (ngSubmit)=\"updateExpense()\">\n            <div class=\"form-group\">\n              <mat-form-field class=\"full-width-field MR4\">\n                <mat-label>Expense Name</mat-label>\n                <input matInput formControlName=\"expenseName\" type=\"text\" placeholder=\"Enter Group Name\"\n                  autocomplete=\"off\" />\n                <!-- <mat-error *ngIf=\"updateExpenseForm.controls.expenseName.hasError('required')\">\n                  Expense Name is <strong>required</strong>\n                </mat-error> -->\n              </mat-form-field>\n\n            </div>\n            <div class=\"form-group\">\n              <mat-form-field class=\"full-width-field MR4\">\n                <mat-label class='description'>Amount</mat-label>\n                <input matInput formControlName=\"amount\" type=\"number\" placeholder=\"Ex: 5000 INR\" autocomplete=\"off\" />\n                <!-- <mat-error *ngIf=\"updateExpenseForm.controls.amount.hasError('required')\">\n                  Amount <strong>required</strong>\n                </mat-error> -->\n              </mat-form-field>\n\n            </div>\n            <div class=\"form-group\" class=\"full-width-field MR4\">\n\n              <mat-label>Paid By:</mat-label>\n              <ng-multiselect-dropdown [placeholder]=\"'Select Users to Add'\" [data]=\"allUsers\"\n                [settings]=\"dropdownSettings1\" (onSelect)=\"onItemSelect($event)\" (onSelectAll)=\"onSelectAll($event)\"\n                formControlName=\"expensePaidBy\">\n              </ng-multiselect-dropdown>\n\n            </div>\n            <div class=\"form-group\" class=\"full-width-field MR4\">\n\n              <mat-label>Expense to be split between:</mat-label>\n              <ng-multiselect-dropdown [placeholder]=\"'Select Users to Add'\" [data]=\"allUsers\"\n                [settings]=\"dropdownSettings\" (onSelect)=\"onItemSelect($event)\" (onSelectAll)=\"onSelectAll($event)\"\n                formControlName=\"expenseUsersInvolved\">\n              </ng-multiselect-dropdown>\n\n            </div>\n\n            <div class=\"form-group\" class=\"full-width-field MR4\">\n\n              <mat-label>category</mat-label>\n              <ng-multiselect-dropdown [placeholder]=\"'Select a category to add'\" [data]=\"category\"\n                [settings]=\"dropdownSettings1\" (onSelect)=\"onItemSelect($event)\" (onSelectAll)=\"onSelectAll($event)\"\n                formControlName=\"category\">\n              </ng-multiselect-dropdown>\n\n            </div>\n\n            <div class=\"flex-even\">\n              <button type=\"button\" mat-raised-button color=\"default\" (click)=\"resetForm()\">Cancel</button>\n              <button mat-raised-button color=\"primary\" [disabled]=\"!updateExpenseForm.valid\" type=\"submit\">Update</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SharedModule } from './shared/shared.module';\nimport {  IDropdownSettings } from \"ng-multiselect-dropdown\";\nimport { CreateGroupComponent } from \"./groups/create-group/create-group.component\";\nimport { GroupDetailsComponent } from \"./groups/group-details/group-details.component\";\nimport { GroupsComponent } from \"./groups/groups/groups.component\";\nimport { UpdateGroupComponent } from \"./groups/update-group/update-group.component\";\nimport { TopNavigationComponent } from \"./shared/top-navigation/top-navigation/top-navigation.component\";\n//import { MyProfileModule } from '../my profile/my-profile.module';\nimport { MyProfileComponent } from './my profile/my-profile/my-profile.component';\nimport { NotificationsComponent } from './notifications/notifications/notifications/notifications.component';\nimport { AddExpenseComponent } from './expenses/add-expense/add-expense.component';\nimport { UpdateExpenseComponent } from './expenses/update-expense/update-expense.component';\n\n@NgModule({\n  declarations: [GroupsComponent, \n    CreateGroupComponent, \n    UpdateGroupComponent,\n    GroupDetailsComponent,\n  TopNavigationComponent,\n  MyProfileComponent,\n  NotificationsComponent,\n  AddExpenseComponent,\n  UpdateExpenseComponent\n ],\n  imports: [\n      CommonModule,\n      RouterModule,\n      FormsModule,\n      ReactiveFormsModule,\n      SharedModule\n  ],\n  exports:[]\n})\nexport class GroupsModule { }\n","import { Component, OnInit } from \"@angular/core\";\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { AuthenticateService } from \"src/app/helpers/services/authentication/authenticate.service\";\nimport { Router } from \"@angular/router\";\nimport { GroupsService } from \"src/app/helpers/services/groups/groups.service\";\nimport { IDropdownSettings } from \"ng-multiselect-dropdown\";\nimport { element } from \"protractor\";\n\n@Component({\n  selector: \"app-create-group\",\n  templateUrl: \"./create-group.component.html\",\n  styleUrls: [\"./create-group.component.scss\"]\n})\nexport class CreateGroupComponent implements OnInit {\n  createGroupForm: FormGroup;\n  authToken: any;\n  userId: any;\n  allGroups: any;\n  userName: any;\n  allUsers: any = [];\n\n  dropdownList = [];\n  selectedItems = [];\n  dropdownSettings = {};\n\n  constructor(\n    private _groups: GroupsService,\n    private toastr: ToastrService,\n    private fb: FormBuilder,\n    private _router: Router,\n    private _authenticate: AuthenticateService\n  ) {}\n\n  ngOnInit(): void {\n    this.authToken = this._authenticate.getUserAuth();\n    this.userId = this._authenticate.getUserInfoFromLocalStorage();\n    // this.userName=this.getUsersGroup.firstName+' '+this.getUsersGroup.lastName\n    this.createGroupForm = this.fb.group({\n      group_name: [null, Validators.required],\n      description: [null, Validators.required],\n      group_users: [null, Validators.required],\n      group_creatorId: [this.userId.userId, Validators.required],\n      group_creatorName: [\n        this.userId.firstName + \" \" + this.userId.lastName,\n        Validators.required\n      ],\n      group_updater_id: [this.userId.userId, Validators.required],\n      group_updater_name: [\n        this.userId.firstName + \" \" + this.userId.lastName,\n        Validators.required\n      ]\n    });\n\n    this.getUsersGroup();\n\n    this.dropdownSettings = {\n      singleSelection: false,\n      idField: \"item_id\",\n      textField: \"item_text\",\n      selectAllText: \"Select All\",\n      unSelectAllText: \"UnSelect All\",\n      itemsShowLimit: 3,\n      allowSearchFilter: true\n    };\n  }\n  onItemSelect(item: any) {\n    console.log(item);\n    this.selectedItems.push(item);\n  }\n  onSelectAll(items: any) {\n    console.log(items);\n  }\n\n  getMyGroups: any = () => {\n    this._groups.getAllGroups(this.userId.userId, this.authToken).subscribe(\n      response => {\n        console.log(response);\n        if (response.error == true && response.status == 404) {\n          this.toastr.warning(response.message, \"\");\n        } else if (response.status == 200 && response.data.length > 0) {\n          this.allGroups = response.data;\n        }\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  };\n\n  getUsersGroup: any = () => {\n    this._authenticate.getUsers(this.authToken).subscribe(\n      response => {\n        console.log(response);\n        if (response.error == true && response.status == 404) {\n          this.toastr.warning(response.message, \"\");\n        } else if (response.status == 200 && response.data.length > 0) {\n          this.allUsers = [];\n          response.data.forEach(element => {\n            if (element[\"firstName\"] != \"\") {\n              this.allUsers.push({\n                item_id: element.userId,\n                item_text: element[\"firstName\"] + \" \" + element[\"lastName\"]\n              });\n            }\n          });\n        }\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  };\n\n  createGroup = () => {\n    console.log(\"in this call\");\n    this.createGroupForm.value.group_users.push({item_id: this.userId.userId, item_text: this.userId.firstName + \" \" + this.userId.lastName})\n    this.createGroupForm.patchValue({\n      group_creatorName: this.userId.firstName + \" \" + this.userId.lastName,\n      group_creatorId: this.userId.userId,\n      group_updater_id: this.userId.userId,\n      group_updater_name: this.userId.firstName + \" \" + this.userId.lastName\n    });\n    this._groups.addGroup(this.createGroupForm.value).subscribe(\n      (response: any) => {\n        console.log(response);\n        if (response.status == 200 && response.data) {\n          setTimeout(() => {\n            this.createGroupForm.reset();\n            this._router.navigateByUrl(\"/groups\");\n          }, 1000);\n          this.getMyGroups();\n          this.getUsersGroup();\n        }\n        if (response.status == 500 && response.error == true) {\n          this.createGroupForm.reset();\n        }\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  };\n\n  resetForm = () => {\n    console.log(\"in resrt form\");\n    this.createGroupForm.reset();\n    console.log(\"before call\");\n    this._router.navigateByUrl(\"/groups\");\n  };\n}\n","<app-top-navigation></app-top-navigation>\n\n\n<div class=\"c2\">\n  <div class=\"container-fluid\">\n    <div class=\"row M0\">\n      <div class=\"offset-3 col-6\">\n        <div class=\"MTB15\">\n\n          <div className=\"login-container\">\n            <h2>Create Group</h2>\n\n            <form class=\"signup\" [formGroup]=\"createGroupForm\" (ngSubmit)='createGroup()'>\n\n\n              <div class=\"form-group\">\n                <mat-form-field class=\"full-width-field MR4\">\n\n                  <mat-label>Group Name</mat-label>\n                  <input matInput formControlName=\"group_name\" type=\"text\" placeholder=\"Enter Group Name\"\n                    autocomplete=\"off\" />\n                  <mat-error *ngIf=\"createGroupForm.controls.group_name.hasError('required')\">\n                    Group Name is <strong>required</strong>\n                  </mat-error>\n                </mat-form-field>\n\n              </div>\n              <div class=\"form-group\">\n                <mat-form-field class=\"full-width-field MR4\">\n\n                  <mat-label class='description'>description</mat-label>\n\n                  <input matInput formControlName=\"description\" type=\"text\" placeholder=\"description\" />\n                  <mat-error *ngIf=\"createGroupForm.controls.description.hasError('required')\">\n                    Description <strong>required</strong>\n                  </mat-error>\n                </mat-form-field>\n\n              </div>\n              <div class=\"form-group\" class=\"full-width-field MR4\">\n\n                <mat-label>Users</mat-label>\n                <ng-multiselect-dropdown [placeholder]=\"'Select Users to Add'\" [data]=\"allUsers\"\n                  [settings]=\"dropdownSettings\" (onSelect)=\"onItemSelect($event)\" (onSelectAll)=\"onSelectAll($event)\"\n                  formControlName=\"group_users\">\n                </ng-multiselect-dropdown>\n\n              </div>\n\n              <div class=\"flex-even\">\n                <button type=\"button\" mat-raised-button color=\"default\" (click)=\"resetForm()\">Cancel</button>\n                <button mat-raised-button color=\"primary\" [disabled]=\"!createGroupForm.valid\"\n                  type=\"submit\">Create</button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Inject } from \"@angular/core\";\nimport { AuthenticateService } from \"src/app/helpers/services/authentication/authenticate.service\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { GroupsService } from \"src/app/helpers/services/groups/groups.service\";\nimport { Router, ActivatedRoute, Params } from \"@angular/router\";\nimport { SocketService } from 'src/app/helpers/services/socket/socket.service';\n\n\n@Component({\n  selector: \"app-group-details\",\n  templateUrl: \"./group-details.component.html\",\n  styleUrls: [\"./group-details.component.scss\"],\n})\nexport class GroupDetailsComponent implements OnInit {\n  userId: any;\n  authToken: string;\n  allGroups: any;\n  groupDetail : any;\n  gid: String;\n\n  allUsers: any[];\n  expenseDetail: any;\nsettleExpenseTableData = [];\n  constructor(\n    private _authenticate: AuthenticateService,\n    private toastr: ToastrService,\n    private _groups: GroupsService,\n    private _router: Router,\n    private fb:FormBuilder,\n    private route: ActivatedRoute,\n    private socket:SocketService\n  ) {}\n\n  ngOnInit(): void {\n    this.authToken = this._authenticate.getUserAuth();\n    this.userId = this._authenticate.getUserInfoFromLocalStorage();\n    console.log(\"this is get group details\");\n    this.route.params.subscribe((params: Params) => {\n      this.gid = params.id;\n    });\n    this.getGroupDetails(this.gid);\n    this.getAllUsers();\n    this.getExpenseDetails();\n\n    this.verifyUserConfirmation();\n    this.getUpdatesFromUser();\n    \n   \n  }\n\n  getMyGroups: any = () => {\n    this._groups.getAllGroups(this.userId.userId, this.authToken).subscribe(\n      (response) => {\n        console.log(response);\n        if (response.error == true && response.status == 404) {\n          this.toastr.warning(response.message, \"\");\n        } else if (response.status == 200 && response.data.length > 0) {\n          this.allGroups = response.data;\n        }\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  };\n\n  getAllUsers: any = () => {\n    this._authenticate.getUsers(this.authToken).subscribe(\n      response => {\n        console.log(response);\n        if (response.error == true && response.status == 404) {\n          this.toastr.warning(response.message, \"\");\n        } else if (response.status == 200 && response.data.length > 0) {\n          this.allUsers = [];\n          response.data.forEach(element => {\n            if (element[\"firstName\"] != \"\") {\n              this.allUsers.push({\n                item_id: element.userId,\n                item_text: element[\"firstName\"] + \" \" + element[\"lastName\"]\n              });\n            }\n          });\n        }\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  };\n\n  getGroupDetails: any = (gid) => {\n    this._groups.groupDetails(gid).subscribe(\n      (response) => {\n        console.log(response);\n        if (response.error == true && response.status == 404) {\n          console.log(\"in if\");\n          this.toastr.warning(response.message, \"\");\n        } else if (response.status == 200 && response.data) {\n          console.log(\"in else if\");\n          this.groupDetail = response.data;\n          console.log(response.data);\n        }\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  };\n\n  getExpenseDetails: any = () => {\n    this._groups.expenseDetails(this.gid).subscribe(\n      (response) => {\n        console.log(response);\n        if (response.error == true && response.status == 404) {\n          console.log(\"in if\");\n          this.toastr.warning(response.message, \"\");\n        } else if (response.status == 200 && response.data) {\n          console.log(\"in else if\");\n          this.expenseDetail = response.data;\n          console.log(response.data);\n          this.generateSettleExpenseData(this.expenseDetail);\n        }\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  };\n  // _id: \"5e8b4bcd8088ef5f006e75a1\"\n  // expenseName: \"test\"\n  // amount: 1000\n  // updatedOn: \"2020-04-06T15:33:33.000Z\"\n  // deletedOn: null\n  // groupId: \"VNlib4vqj\"\n  // expenseId: \"eT-LkmQ2t\"\n  // expensePaidBy: [{_id: \"5e8b4bcd8088ef5f006e75a2\", item_id: \"HQ_cnFKBk\", item_text: \"sri \"}]\n  // category: [{_id: \"5e8b4bcd8088ef5f006e75a3\", item_id: \"1\", item_text: \"Petrol/Gas\"}]\n  // createdOn: \"2020-04-06T15:33:33.000Z\"\n  // expenseUsersInvolved: [{_id: \"5e8b4bcd8088ef5f006e75a4\", item_id: \"HQ_cnFKBk\", item_text: \"sri \"},…]\n  // 0: {_id: \"5e8b4bcd8088ef5f006e75a4\", item_id: \"HQ_cnFKBk\", item_text: \"sri \"}\n  // 1: {_id: \"5e8b4bcd8088ef5f006e75a5\", item_id: \"qYYq4Y79b\", item_text: \"sri \"}\n\n  generateSettleExpenseData = (data) => {\n    this.settleExpenseTableData = [];\n    if(data.length > 0) {\n      data.forEach(element => {\n        let usersVal = \"\";\n        if(element.expenseUsersInvolved.length > 0 ){\n          let len = element.expenseUsersInvolved.length;\n          element.expenseUsersInvolved.forEach((element,index) => {\n            if((index+1) == len){\n              usersVal += usersVal + element.item_text;\n            }else{\n              usersVal += usersVal + element.item_text + \" and \";\n            }\n\n          });\n        }\n        this.settleExpenseTableData.push({\n          toPayToCreator: usersVal + \" has to pay to \"+ element.expensePaidBy[0].item_text + \" INR \"+element.amount + \" only\"\n        })\n      });\n      console.log(this.settleExpenseTableData);\n    }\n  } \n\n\n  deleteExpense = (id) => {\n    this._groups.deleteExpense(id).subscribe(res=>{\n      this.getExpenseDetails(this.gid);\n    })\n  }\n\n  redirectToCreateExpense = () => {\n    this._router.navigate(['/groups/expense/create-expense',this.gid]);\n  }\n\n  redirectToUpdateExpense = () => {\n    this._router.navigate(['/groups/expense/update-expense',this.gid]);\n  }\n\n\n  public getUpdatesFromUser = () => {\n\n    this.socket.getUpdatesFromUser(this.userId).subscribe((data) => {\n      //getting message from user.\n      this.toastr.info(data.message);\n      //console.log(data)\n\n      if(!data.gid)\n        this.getExpenseDetails()\n\n    });\n  }//end getUpdatesFromUser\n\n\n    //listened\n    public verifyUserConfirmation: any = () => {\n      this.socket.verifyUser()\n        .subscribe(() => {\n          this.socket.setUser(this.authToken);//in reply to verify user emitting set-user event with authToken as parameter.\n        },\n        (err) => {\n          this.toastr.error(err,\"Some error occured\");\n        });//end subscribe\n    }//end verifyUserConfirmation\n  \n  //emitted \n\n  public notifyUpdatesToUser: any = (data) => {\n    //data will be object with message and userId(recieverId)\n    this.socket.notifyUpdates(data);\n    //console.log(data)\n\n    if(!data.gid)\n      this.getExpenseDetails(this.userId)\n\n  }//end notifyUpdatesToUser\n\n\n\n}","<app-top-navigation></app-top-navigation>\n<div class=\"container MT50\">\n  <div class=\"row\">\n    <div class=\"col-12 text-center\">\n      <h2>{{groupDetail?.group_name}}</h2>\n      <h4>{{groupDetail?.description}}</h4>\n    </div>\n    <div class=\"col-12\">\n      <mat-tab-group mat-stretch-tabs class=\"example-stretched-tabs mat-elevation-z4\">\n        <mat-tab label=\"Expenses\">\n          <div class=\"container-fluid\">\n            <div class=\"row\">\n              <div class=\"col-12\">\n                <a (click)=\"redirectToCreateExpense()\">\n                  <button mat-fab color=\"primary\" class=\"float-right MTB15\"><span class=\"material-icons\">\n                      add\n                    </span></button></a>\n              </div>\n            </div>\n          </div>\n          <div class=container-fluid>\n            <div class=\"row clear-both\">\n\n              <div class=\"col-md-4 col-lg-4 col-xl-4 MTB15\" *ngFor=\"let item of expenseDetail, let i= index\">\n                <div class=\"card\">\n                  <div class=\"card-header\">\n                    <h3 class=\"card-title\">{{item.expenseName}}</h3>\n                    <button mat-mini-fab color=\"primary\" (click)=\"redirectToUpdateExpense()\"><span\n                        class=\"material-icons\">\n                        open_in_new\n                      </span></button>\n                  </div>\n                  <div class=\"card-body\">\n\n                    <div>\n                      <h5 class=\"card-text\">amount : {{item.amount}}</h5>\n                      <h5 class=\"card-text\">category : {{item.category[0].item_text}}</h5>\n                    </div>\n                  </div>\n                  <div class=\"card-footer\">\n                    <div class=\"flex-even\">\n                      <span>Created by: {{groupDetail?.group_creatorName}}</span>\n                      <button mat-mini-fab color=\"warn\" class=\"float-right\"\n                        (click)=\"deleteExpense(item.expenseId)\"><span class=\"material-icons\">\n                          delete_forever\n                        </span></button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </mat-tab>\n        <mat-tab label=\"Users\">\n          <div class=\"row M0\">\n            <div class=\"card col-3\" *ngFor=\"let user of groupDetail?.group_users\">\n              <div class=\"card-body\">\n                <p>{{user.item_text}}</p>\n              </div>\n            </div>\n          </div>\n        </mat-tab>\n        <mat-tab label=\"Settle Expenses\">\n          <div class=container-fluid>\n            <div class=\"row clear-both\">\n              <div class=\"col-12\">\n                <table>\n                  <tbody>\n                    <tr *ngFor=\"let val of settleExpenseTableData\">\n                      <td>\n                        {{val.toPayToCreator}}\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </mat-tab>\n      </mat-tab-group>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { AuthenticateService } from \"src/app/helpers/services/authentication/authenticate.service\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { GroupsService } from \"src/app/helpers/services/groups/groups.service\";\nimport { Router } from \"@angular/router\";\nimport { SocketService } from \"../../../helpers/services/socket/socket.service\";\n\n@Component({\n  selector: \"app-groups\",\n  templateUrl: \"./groups.component.html\",\n  styleUrls: [\"./groups.component.scss\"],\n})\nexport class GroupsComponent implements OnInit {\n  userId: any;\n  authToken: string;\n  allGroups: any;\n  onlineUserList: any[];\n\n  constructor(\n    private _authenticate: AuthenticateService,\n    private toastr: ToastrService,\n    private _groups: GroupsService,\n    private _router: Router,\n    private socket: SocketService\n  ) {}\n\n  ngOnInit(): void {\n    this.authToken = this._authenticate.getUserAuth();\n    this.userId = this._authenticate.getUserInfoFromLocalStorage();\n    this.getMyGroups();\n  }\n\n  getMyGroups: any = () => {\n    this._groups.getAllGroups(this.userId.userId, this.authToken).subscribe(\n      (response) => {\n        console.log(response);\n        if (response.error == true && response.status == 404) {\n          this.toastr.warning(response.message, \"\");\n        } else if (response.status == 200 && response.data.length > 0) {\n          this.allGroups = response.data;\n        }\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  };\n\n  deleteGroup = (id) => {\n    this._groups.deleteGroup(id).subscribe((res) => {\n      console.log(res);\n      this.getMyGroups();\n    });\n  };\n\n  groupDetails = (id) => {\n    this._groups.groupDetails(id).subscribe((res) => {\n      console.log(res);\n      this._router.navigate([\"./groups/\" + id]);\n      this.getMyGroups();\n    });\n  };\n}\n","<app-top-navigation></app-top-navigation>\n<div class='container-fluid'>\n  <button class='btn btn-success' >\n    <a [routerLink]=\"['/groups/create-group']\"><span class=\"material-icons\">\n        add\n      </span>Create Group</a></button>\n  <div class=\"row clear-both\">\n    <div class=\"col-md-4 col-lg-4 col-xl-4 MTB15\" *ngFor=\"let group of allGroups, let i=index\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h3 class=\"card-title\">{{group.group_name}}</h3>\n          <button (click)=\"groupDetails(group.groupId)\" mat-mini-fab color=\"primary\"><span class=\"material-icons\">\n              open_in_new\n            </span></button>\n        </div>\n        <div class=\"card-body\">\n\n          <div>\n            <h5 class=\"card-text\">{{group.description}}</h5>\n          </div>\n        </div>\n        <div class=\"card-footer\">\n          <div class=\"flex-even\">\n            <span>Created by: {{group.group_creatorName}}</span>\n            <button mat-mini-fab color=\"warn\" class=\"float-right\" (click)=\"deleteGroup(group.groupId)\"><span class=\"material-icons\">\n              delete_forever\n              </span></button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-update-group',\n  templateUrl: './update-group.component.html',\n  styleUrls: ['./update-group.component.scss']\n})\nexport class UpdateGroupComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>update-group works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-my-profile',\n  templateUrl: './my-profile.component.html',\n  styleUrls: ['./my-profile.component.scss']\n})\nexport class MyProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-top-navigation></app-top-navigation>\n\n<p>my-profile works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-notifications',\n  templateUrl: './notifications.component.html',\n  styleUrls: ['./notifications.component.scss']\n})\nexport class NotificationsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-top-navigation></app-top-navigation>\n\n<p>notifications works!</p>\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { ToastrService,ToastrModule } from 'ngx-toastr';\nimport { TopNavigationComponent } from './top-navigation/top-navigation/top-navigation.component';\nimport { RouterModule } from '@angular/router';\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {ClipboardModule} from '@angular/cdk/clipboard';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    MatFormFieldModule,\n    RouterModule,\n    ToastrModule.forRoot(),\n    NgMultiSelectDropDownModule.forRoot(),\n    A11yModule,\n    ClipboardModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    MatButtonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatDialogModule,\n    MatIconModule,\n    MatInputModule,\n    MatSelectModule,\n    MatSortModule,\n    MatTabsModule\n  ],\n  exports: [\n    CommonModule,\n    MatFormFieldModule,\n    NgMultiSelectDropDownModule,\n    A11yModule,\n    ClipboardModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    MatButtonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatDialogModule,\n    MatIconModule,\n    MatInputModule,\n    MatSelectModule,\n    MatSortModule,\n    MatTabsModule\n  ]\n})\nexport class SharedModule {}\n","import { Component, OnInit, Input, SimpleChanges } from \"@angular/core\";\n//import { Cookie } from \"ng2-cookies\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { Router } from \"@angular/router\";\nimport { SocketService } from \"../../../../helpers/services/socket/socket.service\";\nimport { CommunicationService } from \"src/app/helpers/services/core/communication.service\";\nimport { AuthenticateService } from \"../../../../../app/helpers/services/authentication/authenticate.service\";\n\n@Component({\n  selector: \"app-top-navigation\",\n  templateUrl: \"./top-navigation.component.html\",\n  styleUrls: [\"./top-navigation.component.scss\"]\n})\nexport class TopNavigationComponent implements OnInit {\n  @Input() active: string;\n\n  authToken: string;\n  userId: string;\n  userName: string;\n  activeDashBoard: any;\n  notificationCount: any = 0;\n  public isLoggedIn: Boolean = false;\n  isUserDataStored: any;\n  fetchToken: string;\n  constructor(\n    private _comm: CommunicationService,\n    private _auth: AuthenticateService,\n    private router: Router,\n    private toastr: ToastrService,\n    private socket: SocketService\n  ) {\n    this._comm.changeEmitted.subscribe(resp => {\n      console.log(resp);\n      if (resp === true) {\n        this.isLoggedIn = true;\n      }else{\n        this.isLoggedIn = false;\n      }\n    });\n    this.isUserDataStored = this._auth.getUserInfoFromLocalStorage();\n    if (this.isUserDataStored && this.isUserDataStored.userId != null) {\n      this.userId = this.isUserDataStored.userId;\n      this.isLoggedIn = true;\n    }else{\n      this.isLoggedIn = false;\n    }\n    this.fetchToken = this._auth.getUserAuth();\n    if(this.fetchToken){\n      this.authToken = this.fetchToken;\n    }else{\n      this.isLoggedIn = false;\n    }\n    this.socket.setUser(this.fetchToken);\n    this.socket.receiveSocketNotification().subscribe(resp => {\n      this.notificationCount = 0;\n      console.log(\"socket resposne received\",resp); \n      resp.forEach(element => {\n        if(element.item_id == this.userId){\n          console.log(\"this is the user who receives notification\",element);\n          this.notificationCount++;\n        }\n      });\n    })\n    console.log(\"notification count\", this.notificationCount);\n  }\n\n  ngOnInit(): void {\n    this.socket.setUser(this.fetchToken);\n    this.isUserDataStored = this._auth.getUserInfoFromLocalStorage();\n    if (this.isUserDataStored && this.isUserDataStored.userId != null) {\n      this.userId = this.isUserDataStored.userId;\n      this.isLoggedIn = true;\n    }else{\n      this.isLoggedIn = false;\n    }\n    this.fetchToken = this._auth.getUserAuth();\n    if(this.fetchToken){\n      this.authToken = this.fetchToken;\n    }else{\n      this.isLoggedIn = false;\n    }\n    this.activeDashBoard = this.active;\n    this.socket.receiveSocketNotification().subscribe(resp => {\n      this.notificationCount = 0;\n      console.log(\"socket resposne received\",resp);\n      resp.forEach(element => {\n        if(element.item_id == this.userId){\n          console.log(\"this is the user who receives notification\",element);\n          this.notificationCount++;\n        }\n      });\n    })\n    console.log(\"notification count\", this.notificationCount);\n  }\n\n  public logoutFunction = () => {\n    this.authToken = this._auth.getUserAuth();\n    this._auth.logout(this.userId, this.authToken).subscribe(\n      response => {\n        if (response.status === 200) {\n          localStorage.removeItem(\"userInfo\");\n          localStorage.removeItem(\"auth\");\n          this._comm.emitChange(false);\n         this.socket.disconnectedSocket(); \n        this.socket.exitSocket(); \n          this.router.navigate([\"/authenticate\"]); \n        } else {\n          this.toastr.error(response.message, \"Error!\");\n        } // end condition\n      },\n      err => {\n        if (err.status == 404) {\n          this.toastr.warning(\n            \"Logout Failed\",\n            \"Already Logged Out or Invalid User\"\n          );\n          this.router.navigate([\"/authenticate\"]);\n        } else {\n          this.toastr.error(\"Some Error Occurred\", \"Error!\");\n        }\n      }\n    );\n  };\n  ngOnChanges(changes: SimpleChanges) {\n    this.activeDashBoard = changes.active;\n  }\n}","<nav class=\"navbar navbar-expand-lg navbar navbar-dark bg-dark\">\n  <a class=\"navbar-brand\" [routerLink]=\"['/groups']\">Expense Split Application</a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\n    aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item\" *ngIf=\"isLoggedIn\">\n        <a class=\"\" [routerLink]=\"['/groups']\">Group</a>\n      </li>\n    </ul>\n    <div class=\"collapse navbar-collapse justify-flex-end\" id=\"navbar-list-4\">\n      <a class=\"notifAnchor\" [routerLink]=\"['/notifications']\">\n        <span class=\"notificationIconPointer\">{{notificationCount}}</span>\n      <span class=\"material-icons icons\">\n        notifications_active\n        </span>\n        </a>\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item dropdown\">\n          <a class=\"nav-link dropdown-toggle flex-even\" href=\"#\" id=\"navbarDropdownMenuLink\" role=\"button\"\n            data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n            <span class=\"userName\">Hey, {{isUserDataStored?.firstName}} {{isUserDataStored?.lastName}}</span>\n            <span class=\"material-icons icons\">\n              person\n            </span>\n          </a>\n          <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n            <a class=\"dropdown-item\" [routerLink]=\"['/my-profile']\">My Profile</a>\n            <a class=\"dropdown-item\" href=\"#\" *ngIf=\"isLoggedIn\" (click)=\"logoutFunction()\">Logout</a>\n          </div>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Location } from \"@angular/common\";\n\n@Component({\n  selector: \"app-page-not-found\",\n  templateUrl: \"./page-not-found.component.html\",\n  styleUrls: [\"./page-not-found.component.scss\"]\n})\nexport class PageNotFoundComponent implements OnInit {\n  constructor(private location: Location) {}\n\n  ngOnInit() {}\n  goBack = (): any => {\n    this.location.back();\n  };\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div style=\"margin-top: 20vh;\" class=\"col-sm-12 col-md-12 col-lg-12 mx-auto\">\n      <div class=\"card border-info cardBorder\">\n\n        <div class=\"card-body text-center\">\n          <div class=\"text-center\">\n            <div>\n              <h1> \n                <br>You are looking for something that doesn't exist.404!!!\n              </h1>\n            </div>\n            <div>\n              <h1> <span style=\"color:red\">Error 404 :( </span> </h1>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"card-footer text-center\">\n          <div class=\"col-md-12 control\">\n            <button type=\"button\" class=\"btn btn-warning\" (click)=\"goBack()\">\n              Go back\n            </button>\n\n          </div>\n        </div>\n\n      </div>\n\n    </div>\n\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  BASE_URL: \"https://fierce-stream-20585.herokuapp.com/\",\n  API_VERSION: 'api/v1/',\n  SUB_PATH: {\n    GROUP: 'group/',\n    EXPENSE:'expense/'\n  },\n  APIS: {\n    SIGNUP: 'signup',\n    SIGNIN: 'login',\n    FORGOTPASSWORD: 'resetPassword',\n    RESETPASSWORD:'updatePassword',\n    LOGOUT:'logout',\n    CREATEGROUP:'group/createGroup',\n    DELETE: 'delete',\n    DETAILS:'details',\n    UPDATEGROUP:'updateGroup',\n    CREATEEXPENSE:'createExpense',\n    UPDATEEXPENSE:'updateExpense',\n    EXPENSE_DETAILS:'details',\n    LIST: 'list',\n    NOTIFICATIONS: 'notifications',\n    UPDATE: 'update'\n    \n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\n\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"]}